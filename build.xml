<?xml version="1.0"?>
 	<!-- ********************************************************* -->
 	<!-- ** Patient Matching Module                             ** -->
 	<!-- **                                                     ** -->
 	<!-- ** @author James Egg                                   ** -->
 	<!-- ** @version 1.0                                        ** -->
 	<!-- ********************************************************* -->
 	<project name="PatientMatchingModule" default="package-module">
 	               
 	        <!-- *********************************************************** -->
 	        <!-- **                     TARGETS                           ** -->
 	        <!-- *********************************************************** -->
 	        <target name="init" description="initialization">
 	                <xmlproperty file="metadata/config.xml" />
 	
 	                <filterset id="variables.to.replace">
 	                        <filter token="MODULE_ID" value="${module.id}" />
 	                        <filter token="MODULE_NAME" value="${module.name}" />
 	                        <filter token="MODULE_VERSION" value="${module.version}" />
 	                        <filter token="MODULE_PACKAGE" value="${module.package}" />
 	                </filterset>
 	               
 	                <path id="classpath">
 	                        <fileset dir="lib">
 	                                <include name="**/*.jar"/>
 	                        </fileset>
 	                        <fileset dir="lib-common">
 	                                <include name="**/*.jar"/>
 	                        </fileset>
 	                </path>
 	
 	        </target>
 	
 	        <target name="clean" description="Delete build and dist directories">
 	                <delete dir="dist" />
 	                <delete dir="build" />
 	        </target>
 	
 	        <target name="compile-module" depends="init" description="Compiles the module">
 	                <mkdir dir="build" />
 	               
 	                <!-- Copy other source data to the build folder -->
 	                <copy todir="build">
 	                        <fileset dir="src/" excludes="**/*.java" />
 	                </copy>
 	               
 	                <!--  Compile module java files -->
 	                <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,vars,source">
 	                        <src path="src/" />
 	                        <include name="**/*.java" />
 	                </javac>
 	               
	                <!--  Compile module web java files -->
 	                <javac destdir="build" classpathref="classpath" debug="true" debuglevel="lines,source">
 	                        <compilerarg line="-g" />
 	                        <src path="web/src/" />
 	                        <include name="**/*.java" />
 	                </javac>
 	               
 	        </target>
 	       
 	        <target name="package-module" depends="compile-module" description="Packages module into omod file">
 	                <mkdir dir="dist" />
 	               
 	                <!-- Copy module metadata -->
 	                <copy todir="build/">
 	                        <fileset dir="metadata/" includes="**/*" />
 	                        <filterset refid="variables.to.replace" />
 	                </copy>
 	               
 	                <!-- Copy module web data -->
 	                <copy todir="build/web/module/">
 	                        <fileset dir="web/module/" includes="**/*" />
 	                        <filterset refid="variables.to.replace" />
 	                </copy>
 	               
 	                <!-- Copy lib folder -->
 	                <!-- (lib should only contain this module's required -->
 	                <!-- libraries that OpenMRS doesn't contain already) -->
 	                <copy todir="build/lib" failonerror="false">
 	                        <fileset dir="lib" includes="**/*" />
 	                </copy>
 	               
 	                <!-- Create distributable jar file -->
 	                <jar destfile="dist/${module.id}-${module.version}.omod">
 	                        <fileset dir="build" includes="**/*" />
 	                </jar>
 	        </target>
 	       
 	        <target name="package-jar" depends="package-module" description="Packages module into jar file">
 	                <!-- Create distributable jar file -->
 	                <jar destfile="dist/${module.id}-${module.version}.jar">
 	                        <fileset dir="build" includes="**/*" />
 	                </jar>
 	        </target>
 		
 			<target name="gui-jar" depends="package-module" description="Creates executable jar that runs GUI">
 				<path id="library.Project">
 					<fileset dir="lib/">
 				    	<include name="*.jar"/>
 					</fileset>
 				</path>
 				<path id="library-common.Project">
 				 	<fileset dir="lib-common/">
 				 	   	<include name="*.jar"/>
 				 	</fileset>
 				</path>
 				 				
 				<pathconvert property="lib.project.manifest.classpath" pathsep=" ">
 					<path refid="library.Project"/>
 					<chainedmapper>
 						<flattenmapper/>
 					    <globmapper from="*" to="lib/*"/>
 					</chainedmapper>
 				</pathconvert>
 				<pathconvert property="lib-common.project.manifest.classpath" pathsep=" ">
 					<path refid="library-common.Project"/>
 				 	<chainedmapper>
 				 		<flattenmapper/>
 				 		<globmapper from="*" to="lib-common/*"/>
 					</chainedmapper>
 				</pathconvert>

 		 		<mkdir dir="dist/RecMatch/tmp" />
 		 		<jar destfile="dist/RecMatch/${module.id}-${module.version}-gui.jar">
 		 			<manifest>
 		 				<attribute name="Main-Class" value="org.regenstrief.linkage.gui.RecMatch" />
 		 				<attribute name="Class-Path" value="${lib.project.manifest.classpath} ${lib-common.project.manifest.classpath}" />
 		 			</manifest>
 		 			<fileset dir="build" includes="**/*" />
 		 		</jar>
 		 		<copy todir="dist/RecMatch/lib">
 		 			<fileset dir="lib" />
 		 		</copy>
 				<copy todir="dist/RecMatch/lib-common">
 				 	<fileset dir="lib-common" />
 				</copy>
 		 		<copy file="win32/sort.exe" todir="dist/RecMatch/win32" />
 			</target>
 	       
 	</project>